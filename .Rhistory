dev2=-2*mean(loglike.est[(nburn+1):nsim])
pD=dev1-dev2
DIC=dev1+pD
proc.time()-ptm
View(try1)
try1$OD
try1$PD
DIC
devtools::check()
?var
#  save(mydata, file="data/mydata.RData")
load("N:/DIPHRData/WeiminZhang/R_Packages/cb_latent_risk_model/biom12972-sup-0003-supprcode-s1/sampledata.rda")
dim(X.f)
dim(covariate_m)
dim(covariate_m)[2]
library(devtools)
library(roxygen2)
library(testthat)
#Step 5: Install!   Now it is as simple as installing the package! You need to run this from the
#parent working directory that contains the cats folder.
setwd("C:\\Users\\zhangw16\\Documents\\R\\R_package")
#install("cblatriskmodel")
install("lchemix")
#library(cblatriskmodel)
#?joint_latent_class_Model
library(lchemix)
?JLchemix
#setwd("C:\\Users\\zhangw16\\Documents\\R\\R_package\\cblatriskmodel")
setwd("C:\\Users\\zhangw16\\Documents\\R\\R_package\\lchemix")
document()
library(devtools)
library(roxygen2)
library(testthat)
#setwd("C:\\Users\\zhangw16\\Documents\\R\\R_package\\cblatriskmodel")
setwd("C:\\Users\\zhangw16\\Documents\\R\\R_package\\lchemix")
document()
#step 7: Re-Install!You can use devtools::build(binary = TRUE) to make a binary package.
setwd("C:\\Users\\zhangw16\\Documents\\R\\R_package")
#install("cblatriskmodel")
install("lchemix")
#need restart
library(lchemix)
?JLchemix
library(MCMCpack)
library(mvtnorm)
data(sampledata)
try1 <-lchemix:::JLchemix(Yvariable= sampledata[,1], X.f_mat = sampledata[,2:37],
X.m_mat = sampledata[,38:73], covariate_f_mat = sampledata[,74:78],
covariate_m_mat = sampledata[,79:83])
try1<-sampledata[,79:83]
dim(try1)
dim(try1)[2]
library(devtools)
library(roxygen2)
library(testthat)
#step 7: Re-Install!You can use devtools::build(binary = TRUE) to make a binary package.
setwd("C:\\Users\\zhangw16\\Documents\\R\\R_package")
#install("cblatriskmodel")
install("lchemix")
#library(cblatriskmodel)
#?joint_latent_class_Model
library(lchemix)
?JLchemix
JLchemix()
library(MCMCpack)
library(mvtnorm)
data(sampledata)
try1 <-lchemix:::JLchemix(Yvariable= sampledata[,1], X.f_mat = sampledata[,2:37],
X.m_mat = sampledata[,38:73], covariate_f_mat = sampledata[,74:78],
covariate_m_mat = sampledata[,79:83])
View(try1)
#library(cblatriskmodel)
#?joint_latent_class_Model
library(lchemix)
library(devtools)
library(roxygen2)
library(testthat)
#An important part of the package development process is R CMD check. R CMD check automatically
#checks your code for common problems. It’s essential if you’re planning on submitting to CRAN,
#but it’s useful even if you’re not because it automatically detects many common problems that
#you’d otherwise discover the hard way.
devtools::check()
#Step 3: Add documentation
#This always seemed like the most intimidating step to me. I'm here to tell you - it's super quick.
#The package roxygen2 that makes everything amazing and simple. The way it works is that you add special
#comments to the beginning of each function, that will later be compiled into the correct format for packagedocumentation.
setwd("C:\\Users\\zhangw16\\Documents\\R\\R_package\\dpmROCsurface")
document()
#step 7: Re-Install!You can use devtools::build(binary = TRUE) to make a binary package.
setwd("C:\\Users\\zhangw16\\Documents\\R\\R_package")
#install("cblatriskmodel")
install("lchemix")
library(devtools)
library(roxygen2)
library(testthat)
#An important part of the package development process is R CMD check. R CMD check automatically
#checks your code for common problems. It’s essential if you’re planning on submitting to CRAN,
#but it’s useful even if you’re not because it automatically detects many common problems that
#you’d otherwise discover the hard way.
devtools::check()
#need restart
library(lchemix)
?JLchemix
?dlnorm
#setwd("C:\\Users\\zhangw16\\Documents\\R\\R_package\\cblatriskmodel")
setwd("C:\\Users\\zhangw16\\Documents\\R\\R_package\\lchemix")
document()
#step 7: Re-Install!You can use devtools::build(binary = TRUE) to make a binary package.
setwd("C:\\Users\\zhangw16\\Documents\\R\\R_package")
#install("cblatriskmodel")
install("lchemix")
library(devtools)
library(roxygen2)
library(testthat)
#An important part of the package development process is R CMD check. R CMD check automatically
#checks your code for common problems. It’s essential if you’re planning on submitting to CRAN,
#but it’s useful even if you’re not because it automatically detects many common problems that
#you’d otherwise discover the hard way.
devtools::check()
library(devtools)
library(roxygen2)
library(testthat)
#setwd("C:\\Users\\zhangw16\\Documents\\R\\R_package\\cblatriskmodel")
setwd("C:\\Users\\zhangw16\\Documents\\R\\R_package\\lchemix")
document()
#step 7: Re-Install!You can use devtools::build(binary = TRUE) to make a binary package.
setwd("C:\\Users\\zhangw16\\Documents\\R\\R_package")
#install("cblatriskmodel")
install("lchemix")
#Getting started with R package
install.packages(c("devtools", "roxygen2", "testthat", "knitr"))
install.packages(c("devtools", "roxygen2", "testthat", "knitr"))
library(devtools)
library(roxygen2)
library(devtools)
library(roxygen2)
library(roxygen2)
library(testthat)
#step 7: Re-Install!You can use devtools::build(binary = TRUE) to make a binary package.
setwd("C:\\Users\\zhangw16\\Documents\\R\\R_package")
#install("cblatriskmodel")
install("lchemix")
?JLchemix
#need restart
library(lchemix)
?JLchemix
library(dpmROCsurface)
?ROC_Surface
library(devtools)
library(roxygen2)
library(testthat)
#You’re now ready to submit your package to CRAN. The easiest way to do this is to run devtools::release(). This:
devtools::release()
devtools::release()
spell_check()
devtools::spell_check()
devtools::spell_check(lchemix)
?devtools::spell_check()
devtools::spell_check(pkg = "lchemix")
devtools::spell_check(pkg = "")
devtools::spell_check(pkg = ".")
devtools::spell_check(pkg = "C:\Users\zhangw16\Documents\R\R_package\lchemix")
devtools::spell_check(pkg = "C:\\Users\zhangw16\Documents\R\R_package\lchemix")
devtools::spell_check(pkg = "C:\\Users\\zhangw16\\Documents\\R\\R_package\\lchemix")
devtools::release()
check_rhub()
#setwd("C:\\Users\\zhangw16\\Documents\\R\\R_package\\cblatriskmodel")
setwd("C:\\Users\\zhangw16\\Documents\\R\\R_package\\lchemix")
document()
#Step 5: Install!   Now it is as simple as installing the package! You need to run this from the
#parent working directory that contains the cats folder.
setwd("C:\\Users\\zhangw16\\Documents\\R\\R_package")
#install("cblatriskmodel")
install("lchemix")
library(devtools)
library(roxygen2)
library(testthat)
#An important part of the package development process is R CMD check. R CMD check automatically
#checks your code for common problems. It is essential if you are planning on submitting to CRAN,
#but it is useful even if you are not because it automatically detects many common problems that
#you'd otherwise discover the hard way.
devtools::check()
#You’re now ready to submit your package to CRAN. The easiest way to do this is to run devtools::release(). This:
devtools::release()
check_rhub()
#library(cblatriskmodel)
#?joint_latent_class_Model
library(lchemix)
?JLchemix
library(devtools)
library(roxygen2)
library(testthat)
#An important part of the package development process is R CMD check. R CMD check automatically
#checks your code for common problems. It is essential if you are planning on submitting to CRAN,
#but it is useful even if you are not because it automatically detects many common problems that
#you'd otherwise discover the hard way.
devtools::check()
?qpdf
library(qpdf)
library(devtools)
library(roxygen2)
library(testthat)
library(qpdf)
#setwd("C:\\Users\\zhangw16\\Documents\\R\\R_package\\cblatriskmodel")
setwd("C:\\Users\\zhangw16\\Documents\\R\\R_package\\lchemix")
document()
#step 7: Re-Install!You can use devtools::build(binary = TRUE) to make a binary package.
setwd("C:\\Users\\zhangw16\\Documents\\R\\R_package")
#install("cblatriskmodel")
install("lchemix")
#An important part of the package development process is R CMD check. R CMD check automatically
#checks your code for common problems. It is essential if you are planning on submitting to CRAN,
#but it is useful even if you are not because it automatically detects many common problems that
#you'd otherwise discover the hard way.
devtools::check()
###########################################################################################################
##########
##########
##########      ROC_surface: change name to sorocs
##########
##########
###########################################################################################################
library(devtools)
library(roxygen2)
library(testthat)
library(qpdf)
#An important part of the package development process is R CMD check. R CMD check automatically
#checks your code for common problems. It is essential if you are planning on submitting to CRAN,
#but it is useful even if you are not because it automatically detects many common problems that
#you'd otherwise discover the hard way.
devtools::check()
library(devtools)
library(roxygen2)
library(testthat)
library(qpdf)
#setwd("C:\\Users\\zhangw16\\Documents\\R\\R_package\\cblatriskmodel")
setwd("C:\\Users\\zhangw16\\Documents\\R\\R_package\\lchemix")
document()
#Step 5: Install!   Now it is as simple as installing the package! You need to run this from the
#parent working directory that contains the cats folder.
setwd("C:\\Users\\zhangw16\\Documents\\R\\R_package")
#install("cblatriskmodel")
install("lchemix")
#An important part of the package development process is R CMD check. R CMD check automatically
#checks your code for common problems. It is essential if you are planning on submitting to CRAN,
#but it is useful even if you are not because it automatically detects many common problems that
#you'd otherwise discover the hard way.
devtools::check()
###########################################################################################################
##########
##########
##########      ROC_surface: change name to sorocs
##########
##########
###########################################################################################################
library(devtools)
library(roxygen2)
library(testthat)
library(qpdf)
###########################################################################################################
##########
spell_check()
check_rhub()
check_win_devel()
#setwd("C:\\Users\\zhangw16\\Documents\\R\\R_package\\cblatriskmodel")
setwd("C:\\Users\\zhangw16\\Documents\\R\\R_package\\lchemix")
document()
#Step 5: Install!   Now it is as simple as installing the package! You need to run this from the
#parent working directory that contains the cats folder.
setwd("C:\\Users\\zhangw16\\Documents\\R\\R_package")
#install("cblatriskmodel")
install("lchemix")
?ggcorrplot
library(devtools)
library(roxygen2)
library(testthat)
library(qpdf)
#setwd("C:\\Users\\zhangw16\\Documents\\R\\R_package\\cblatriskmodel")
setwd("C:\\Users\\zhangw16\\Documents\\R\\R_package\\lchemix")
document()
#Step 5: Install!   Now it is as simple as installing the package! You need to run this from the
#parent working directory that contains the cats folder.
setwd("C:\\Users\\zhangw16\\Documents\\R\\R_package")
#install("cblatriskmodel")
install("lchemix")
#An important part of the package development process is R CMD check. R CMD check automatically
#checks your code for common problems. It is essential if you are planning on submitting to CRAN,
#but it is useful even if you are not because it automatically detects many common problems that
#you'd otherwise discover the hard way.
devtools::check()
###########################################################################################################
##########
##########
##########      ROC_surface: change name to sorocs
##########
##########
###########################################################################################################
library(devtools)
library(roxygen2)
library(testthat)
library(qpdf)
#An important part of the package development process is R CMD check. R CMD check automatically
#checks your code for common problems. It is essential if you are planning on submitting to CRAN,
#but it is useful even if you are not because it automatically detects many common problems that
#you'd otherwise discover the hard way.
devtools::check()
#setwd("C:\\Users\\zhangw16\\Documents\\R\\R_package\\cblatriskmodel")
setwd("C:\\Users\\zhangw16\\Documents\\R\\R_package\\lchemix")
document()
#Step 5: Install!   Now it is as simple as installing the package! You need to run this from the
#parent working directory that contains the cats folder.
setwd("C:\\Users\\zhangw16\\Documents\\R\\R_package")
#install("cblatriskmodel")
install("lchemix")
?glm
library(devtools)
library(roxygen2)
library(testthat)
library(qpdf)
#An important part of the package development process is R CMD check. R CMD check automatically
#checks your code for common problems. It is essential if you are planning on submitting to CRAN,
#but it is useful even if you are not because it automatically detects many common problems that
#you'd otherwise discover the hard way.
devtools::check()
library(devtools)
library(roxygen2)
library(testthat)
library(qpdf)
#An important part of the package development process is R CMD check. R CMD check automatically
#checks your code for common problems. It is essential if you are planning on submitting to CRAN,
#but it is useful even if you are not because it automatically detects many common problems that
#you'd otherwise discover the hard way.
devtools::check()
###########################################################################################################
##########
spell_check()
check_rhub()
library(lchemix)
?JLchemix
data(sampledata)
library(MCMCpack)
library(mvtnorm)
#try1 <-lchemix:::JLchemix()
try1 <-lchemix:::JLchemix(nsim=12,nburn=2,Yvariable= sampledata[,1], X.f_mat = sampledata[,2:37], X.m_mat = sampledata[,38:73],
covariate_f_mat = sampledata[,74:78], covariate_m_mat = sampledata[,79:83])
#try1 <-lchemix:::JLchemix()
try1 <-lchemix:::JLchemix(nsim=12,nburn=2,Yvariable= sampledata[,1], X.f_mat = sampledata[,2:37], X.m_mat = sampledata[,38:73],
covariate_f_mat = sampledata[,74:78], covariate_m_mat = sampledata[,79:83])
check_rhub()
#setwd("C:\\Users\\zhangw16\\Documents\\R\\R_package\\cblatriskmodel")
setwd("C:\\Users\\zhangw16\\Documents\\R\\R_package\\lchemix")
document()
#step 7: Re-Install!You can use devtools::build(binary = TRUE) to make a binary package.
setwd("C:\\Users\\zhangw16\\Documents\\R\\R_package")
#install("cblatriskmodel")
install("lchemix")
library(devtools)
library(roxygen2)
library(testthat)
library(qpdf)
#An important part of the package development process is R CMD check. R CMD check automatically
#checks your code for common problems. It is essential if you are planning on submitting to CRAN,
#but it is useful even if you are not because it automatically detects many common problems that
#you'd otherwise discover the hard way.
devtools::check()
check_rhub()
check_win_devel()
library(devtools)
library(roxygen2)
library(testthat)
library(qpdf)
#setwd("C:\\Users\\zhangw16\\Documents\\R\\R_package\\cblatriskmodel")
setwd("C:\\Users\\zhangw16\\Documents\\R\\R_package\\lchemix")
document()
#step 7: Re-Install!You can use devtools::build(binary = TRUE) to make a binary package.
setwd("C:\\Users\\zhangw16\\Documents\\R\\R_package")
#install("cblatriskmodel")
install("lchemix")
###########################################################################################################
##########
##########
##########      ROC_surface: change name to sorocs
##########
##########
###########################################################################################################
library(devtools)
library(roxygen2)
library(testthat)
library(qpdf)
#An important part of the package development process is R CMD check. R CMD check automatically
#checks your code for common problems. It is essential if you are planning on submitting to CRAN,
#but it is useful even if you are not because it automatically detects many common problems that
#you'd otherwise discover the hard way.
devtools::check()
check_rhub()
check_win_devel()
library(devtools)
library(roxygen2)
library(testthat)
library(qpdf)
#An important part of the package development process is R CMD check. R CMD check automatically
#checks your code for common problems. It is essential if you are planning on submitting to CRAN,
#but it is useful even if you are not because it automatically detects many common problems that
#you'd otherwise discover the hard way.
devtools::check()
library(devtools)
library(roxygen2)
library(testthat)
library(qpdf)
#An important part of the package development process is R CMD check. R CMD check automatically
#checks your code for common problems. It is essential if you are planning on submitting to CRAN,
#but it is useful even if you are not because it automatically detects many common problems that
#you'd otherwise discover the hard way.
devtools::check()
###########################################################################################################
##########
##########
##########      ROC_surface: change name to sorocs
##########
##########
###########################################################################################################
library(devtools)
library(roxygen2)
library(testthat)
library(qpdf)
#setwd("C:\\Users\\zhangw16\\Documents\\R\\R_package\\cblatriskmodel")
setwd("C:\\Users\\zhangw16\\Documents\\R\\R_package\\lchemix")
document()
#step 7: Re-Install!You can use devtools::build(binary = TRUE) to make a binary package.
setwd("C:\\Users\\zhangw16\\Documents\\R\\R_package")
#install("cblatriskmodel")
install("lchemix")
build("C:\\Users\\zhangw16\\Documents\\R\\R_package\\lchemix")
check_built(path = "C:\\Users\\zhangw16\\Documents\\R\\R_package\\lchemix_0.0.0.9000.tar.gz")
check_built(path = "C:\\Users\\zhangw16\\Documents\\R\\R_package\\lchemix_0.1.0.tar.gz")
#setwd("C:\\Users\\zhangw16\\Documents\\R\\R_package\\cblatriskmodel")
setwd("C:\\Users\\zhangw16\\Documents\\R\\R_package\\lchemix")
document()
#Step 5: Install!   Now it is as simple as installing the package! You need to run this from the
#parent working directory that contains the cats folder.
setwd("C:\\Users\\zhangw16\\Documents\\R\\R_package")
#install("cblatriskmodel")
install("lchemix")
#An important part of the package development process is R CMD check. R CMD check automatically
#checks your code for common problems. It is essential if you are planning on submitting to CRAN,
#but it is useful even if you are not because it automatically detects many common problems that
#you'd otherwise discover the hard way.
devtools::check()
###########################################################################################################
##########
##########
##########      ROC_surface: change name to sorocs
##########
##########
###########################################################################################################
library(devtools)
library(roxygen2)
library(testthat)
library(qpdf)
#An important part of the package development process is R CMD check. R CMD check automatically
#checks your code for common problems. It is essential if you are planning on submitting to CRAN,
#but it is useful even if you are not because it automatically detects many common problems that
#you'd otherwise discover the hard way.
devtools::check()
#An important part of the package development process is R CMD check. R CMD check automatically
#checks your code for common problems. It is essential if you are planning on submitting to CRAN,
#but it is useful even if you are not because it automatically detects many common problems that
#you'd otherwise discover the hard way.
devtools::check()
#setwd("C:\\Users\\zhangw16\\Documents\\R\\R_package\\cblatriskmodel")
setwd("C:\\Users\\zhangw16\\Documents\\R\\R_package\\lchemix")
document()
#step 7: Re-Install!You can use devtools::build(binary = TRUE) to make a binary package.
setwd("C:\\Users\\zhangw16\\Documents\\R\\R_package")
#install("cblatriskmodel")
install("lchemix")
###########################################################################################################
##########
##########
##########      ROC_surface: change name to sorocs
##########
##########
###########################################################################################################
library(devtools)
library(roxygen2)
library(testthat)
library(qpdf)
#An important part of the package development process is R CMD check. R CMD check automatically
#checks your code for common problems. It is essential if you are planning on submitting to CRAN,
#but it is useful even if you are not because it automatically detects many common problems that
#you'd otherwise discover the hard way.
devtools::check()
#An important part of the package development process is R CMD check. R CMD check automatically
#checks your code for common problems. It is essential if you are planning on submitting to CRAN,
#but it is useful even if you are not because it automatically detects many common problems that
#you'd otherwise discover the hard way.
devtools::check()
#Step 5: Install!   Now it is as simple as installing the package! You need to run this from the
#parent working directory that contains the cats folder.
setwd("C:\\Users\\zhangw16\\Documents\\R\\R_package")
#setwd("C:\\Users\\zhangw16\\Documents\\R\\R_package\\cblatriskmodel")
setwd("C:\\Users\\zhangw16\\Documents\\R\\R_package\\lchemix")
document()
#step 7: Re-Install!You can use devtools::build(binary = TRUE) to make a binary package.
setwd("C:\\Users\\zhangw16\\Documents\\R\\R_package")
#install("cblatriskmodel")
install("lchemix")
#An important part of the package development process is R CMD check. R CMD check automatically
#checks your code for common problems. It is essential if you are planning on submitting to CRAN,
#but it is useful even if you are not because it automatically detects many common problems that
#you'd otherwise discover the hard way.
devtools::check()
